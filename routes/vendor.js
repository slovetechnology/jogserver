const { addNewVendor, getAllVendors, getSingleVendor, declineVendor, verifyVendor, getAllVendsNotMe, findMyVendor, chooseAVendor, VendorfindMe, getSingleUserVendor, VendorProposals, SingleTransfer, vendorAcceptTransfer, proposalPaidByUser, verifiedProposalByVendor, saveVendorFeedBack, allVendorsFeedbacks, declineProposalByVendor, userDeclinesProposalAccepted, vendorRejectsPayment, getAllVendorTransactions, getVendorProperty, userReportingTransaction, adminAllProposals, adminGetSingleTransfer, verifiedProposalByAdmin } = require('../controllers/vendor')

const router = require('express').Router() 

router.post('/add-vendor', addNewVendor)
router.get('/all', getAllVendors)
router.get('/user/:userid', getSingleUserVendor)
router.get('/single/:id', getSingleVendor)
router.get('/findme/:userid', VendorfindMe)
router.get('/decline-proposal/:id', declineVendor)
router.get('/verify-proposal/:id', verifyVendor)
router.get('/sellers/:userid', getAllVendsNotMe)
router.get('/find/:userid/:vendorid', findMyVendor)
router.post('/add-vendortransfer', chooseAVendor)
router.get('/proposals/:userid', VendorProposals)
router.get('/single-transfer/:id', SingleTransfer)
router.get('/single-transfer-admin/:id', adminGetSingleTransfer)
router.get('/accept-proposal/:vwall_id/:transact_id', vendorAcceptTransfer)
router.get('/declineproposal/:transact_id', declineProposalByVendor)
router.post('/reportdelay/:transact_id', userReportingTransaction)
router.get('/user-declines-proposal/:transact_id', userDeclinesProposalAccepted)
router.post('/submitrejection/:transact_id', vendorRejectsPayment)
router.post('/proposal-paid', proposalPaidByUser)
router.get('/verified-proposal/:transact_id', verifiedProposalByVendor)
router.get('/admin-verified-proposal/:transact_id', verifiedProposalByAdmin)
router.post('/save-feedback', saveVendorFeedBack)
router.get('/my-feedbacks/:vendor', allVendorsFeedbacks)
router.get('/vendorhistories/:userid', getAllVendorTransactions)
router.get('/vendor-property/:vendorid', getVendorProperty)
router.get('/all_proposals', adminAllProposals)

module.exports = router